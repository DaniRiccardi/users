{"ast":null,"code":"var _jsxFileName = \"/home/operador/Documentos/dan/project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Input from \"@material-ui/core/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Wait(m1) {\n  if (m1 > 0) {\n    return new Promise(resolve => setTimeout(resolve, m1));\n  }\n}\n\n_c = Wait;\n\nfunction App() {\n  _s();\n\n  const inputRef = React.useRef(null); // input state\n\n  const [searchText, setSearchText] = React.useState(\"\"); // state of api results { results: [...items]}\n\n  const [datalistItems, setDatalistItems] = React.useState([]); // state of selected items\n\n  const [selectedItems, setSelectedItems] = React.useState([]); // loading state\n\n  const [isLoading, setLoading] = React.useState(false);\n  React.useEffect(() => {\n    setLoading(true);\n    fetch(\"https://randomuser.me/api/?nat=us,gb&results=10\").then(response => response.json()).then(data => {\n      if (data.results && data.results.length > 0) {\n        setDatalistItems([...datalistItems, ...data.results]);\n      }\n    }).catch(() => {\n      setDatalistItems([]);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  const handleSearch = inputValue => {\n    if (inputValue) {\n      const isSelectedItem = findAndSelectItem(inputValue);\n\n      if (isSelectedItem === true) {\n        setSearchText(\"\");\n      } else {\n        Wait(300).then(() => {\n          if (inputValue === inputRef.current.value) {\n            setLoading(true);\n            fetch(`https://randomuser.me/api/?nat=us,gb&q=${inputValue}`).then(response => response.json()).then(data => {\n              if (data.results && data.results.length > 0) {\n                setDatalistItems([...datalistItems, ...data.results]);\n              }\n            }).catch(() => {\n              setDatalistItems([]);\n            }).finally(() => {\n              setLoading(false);\n            });\n          }\n        });\n        setSearchText(inputValue);\n      }\n    } else {\n      setSearchText(inputValue);\n    }\n  };\n\n  const handleKeyUp = e => {\n    if (e.key === \"Enter\") {\n      const isSelectedItem = findAndSelectItem(searchText);\n\n      if (isSelectedItem === true) {\n        setSearchText(\"\");\n      }\n    }\n  };\n\n  const formatName = item => {\n    return `${item.name.title || \"\"} ${item.name.first || \"\"} ${item.name.last || \"\"}`.trim();\n  };\n\n  const findAndSelectItem = name => {\n    if (name) {\n      const existsItem = datalistItems.find(item => name.toLowerCase() === formatName(item).toLowerCase());\n\n      if (existsItem && !selectedItems.some(item => name.toLowerCase() === formatName(item).toLowerCase())) {\n        setSelectedItems([...selectedItems, existsItem]);\n        return true;\n      }\n    }\n  };\n\n  const handleDelete = idx => {\n    selectedItems.splice(idx, 1);\n    setSelectedItems([...selectedItems]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {\n      width: 1024,\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to our system\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Please focus on input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user\",\n        children: \"Users:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        value: searchText,\n        onKeyUp: e => handleKeyUp(e),\n        onChange: e => handleSearch(e.target.value),\n        list: \"users\",\n        name: \"user\",\n        id: \"user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"users\",\n        children: datalistItems.map((item, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: formatName(item)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Selected items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [selectedItems.map((item, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [formatName(item), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleDelete(idx),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this);\n      }), selectedItems.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qULY2UCPHfpoQT5n9Ip1Yy328Do=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wait\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/operador/Documentos/dan/project/src/App.js"],"names":["React","Grid","Button","Input","Wait","m1","Promise","resolve","setTimeout","App","inputRef","useRef","searchText","setSearchText","useState","datalistItems","setDatalistItems","selectedItems","setSelectedItems","isLoading","setLoading","useEffect","fetch","then","response","json","data","results","length","catch","finally","handleSearch","inputValue","isSelectedItem","findAndSelectItem","current","value","handleKeyUp","e","key","formatName","item","name","title","first","last","trim","existsItem","find","toLowerCase","some","handleDelete","idx","splice","width","margin","target","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Input from \"@material-ui/core/Input\";\n\nfunction Wait(m1) {\n  if (m1 > 0) {\n    return new Promise((resolve) => setTimeout(resolve, m1));\n  }\n}\n\nfunction App() {\n  const inputRef = React.useRef(null);\n\n  // input state\n  const [searchText, setSearchText] = React.useState(\"\");\n\n  // state of api results { results: [...items]}\n  const [datalistItems, setDatalistItems] = React.useState([]);\n\n  // state of selected items\n  const [selectedItems, setSelectedItems] = React.useState([]);\n\n  // loading state\n  const [isLoading, setLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    setLoading(true);\n    fetch(\"https://randomuser.me/api/?nat=us,gb&results=10\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.results && data.results.length > 0) {\n          setDatalistItems([...datalistItems, ...data.results]);\n        }\n      })\n      .catch(() => {\n        setDatalistItems([]);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const handleSearch = (inputValue) => {\n    if (inputValue) {\n      const isSelectedItem = findAndSelectItem(inputValue);\n\n      if (isSelectedItem === true) {\n        setSearchText(\"\");\n      } else {\n        Wait(300).then(() => {\n          if (inputValue === inputRef.current.value) {\n            setLoading(true);\n            fetch(`https://randomuser.me/api/?nat=us,gb&q=${inputValue}`)\n              .then((response) => response.json())\n              .then((data) => {\n                if (data.results && data.results.length > 0) {\n                  setDatalistItems([...datalistItems, ...data.results]);\n                }\n              })\n              .catch(() => {\n                setDatalistItems([]);\n              })\n              .finally(() => {\n                setLoading(false);\n              });\n          }\n        });\n\n        setSearchText(inputValue);\n      }\n    } else {\n      setSearchText(inputValue);\n    }\n  };\n\n  const handleKeyUp = (e) => {\n    if (e.key === \"Enter\") {\n      const isSelectedItem = findAndSelectItem(searchText);\n\n      if (isSelectedItem === true) {\n        setSearchText(\"\");\n      }\n    }\n  };\n\n  const formatName = (item) => {\n    return `${item.name.title || \"\"} ${item.name.first || \"\"} ${\n      item.name.last || \"\"\n    }`.trim();\n  };\n\n  const findAndSelectItem = (name) => {\n    if (name) {\n      const existsItem = datalistItems.find(\n        (item) => name.toLowerCase() === formatName(item).toLowerCase()\n      );\n\n      if (\n        existsItem &&\n        !selectedItems.some(\n          (item) => name.toLowerCase() === formatName(item).toLowerCase()\n        )\n      ) {\n        setSelectedItems([...selectedItems, existsItem]);\n        return true;\n      }\n    }\n  };\n\n  const handleDelete = (idx) => {\n    selectedItems.splice(idx, 1);\n    setSelectedItems([...selectedItems]);\n  };\n\n  return (\n    <Grid container style={{ width: 1024, margin: \"0 auto\" }}>\n      <Grid item xs={12}>\n        <h2>Welcome to our system</h2>\n      </Grid>\n\n      <Grid item xs={12}>\n        <h4>Please focus on input</h4>\n        <label htmlFor=\"user\">Users:</label>\n        <input\n          ref={inputRef}\n          value={searchText}\n          onKeyUp={(e) => handleKeyUp(e)}\n          onChange={(e) => handleSearch(e.target.value)}\n          list=\"users\"\n          name=\"user\"\n          id=\"user\"\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        {isLoading && <p>Cargando</p>}\n      </Grid>\n\n      <Grid item xs={12}>\n        <datalist id=\"users\">\n          {datalistItems.map((item, idx) => {\n            return <option key={idx} value={formatName(item)} />;\n          })}\n        </datalist>\n      </Grid>\n\n      <Grid item xs={12}>\n        <h4>Selected items</h4>\n      </Grid>\n\n      <ul>\n        {selectedItems.map((item, idx) => {\n          return (\n            <li key={idx}>\n              {formatName(item)}{\" \"}\n              <button onClick={(e) => handleDelete(idx)}>X</button>\n            </li>\n          );\n        })}\n        {selectedItems.length === 0 && <p></p>}\n      </ul>\n    </Grid>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}